---
title: "Univariate App - mockup"
subtitle: "Note Mockups are not suppose to pretty just functional to develop core logic; we can make things pretty later"
format: 
  html:
    embed-resources: true
    toc: true
server: shiny
editor: source
execute:
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| code-summary: "Setup Quarto"
#| code-fold: true

if (!require(pacman)) install.packages("pacman")
pacman::p_load(
  tidyverse, arrow, here,
  reactable,
  sf, rmapshaper, leaflet,
  bslib, shiny
)
setwd(here::here("Data/notebooks/2025-03-25 - Initial data EDA"))

```

Goal here is to start developing a univariate mockup. Using the data tidied in the initial EDA notebook. You can see the code is identical to the one in the notebook - we only added an interactive input.  

# Interactive Univariate


```{r}
#| context: setup

## Load Dependencies
library(bslib)  
library(ggplot2)
library(here)

## Import required data (see notebook )
load(here("Data/clean datasets/app_v0.1.RData"))

```


```{r}
layout_sidebar(
  sidebar = sidebar(
    shiny::selectizeInput(
      inputId = "select_variable",
      label = "Select Variable",
      choices = names(sf_data  |> select(-district)),
      selected = "cc_district_population",
      multiple = F
    ),
  ),
  shiny::plotOutput("output_plot")
)
```

```{r}
#| context: server

output$output_plot <- renderPlot({ 
  sf_data |> 
    ggplot(aes_string(x = input$select_variable)) +
    geom_density(fill = "blue", alpha = 0.5) +
    labs(title = paste("Density plot of", input$select_variable))
})
```

